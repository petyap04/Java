HTTP (Hypertext Transfer Protocol) e приложен протокол
Модел заявка-отговор
порт 80
Не пази състояние (stateless) – всяка клиентска заявка е независима сама по себе си
Сървърът не обвързва логически серия заявки от определен клиент
Това води до липса на вграден в протокола механизъм за поддържане на сесии

Видове HTTP съобщения: 
- Заявка – инициатор е клиентът
- Отговор – изпраща се от уеб сървъра, като резултат от изпълнението на клиентска заявка

Една HTTP Заявка се състои от: - начален ред
                               - хедъри 
                               - тяло (данни)

Начален ред: - HTTP Метод (Глагол) – указва типа операция, която клиентът иска да извърши със заявения ресурс
             - URL – уникален идентификатор на заявения ресурс
             - Версия на HTTP
Пример: GET en.wikipedia.org/w/index.php HTTP/1.1

Хедъри - Възможно е да дефинира множество хедъри, като всеки от тях заема точно един ред и следва формата: “Име на хедър: Стойност на хедър”
Данни – опционални, може да съдържат множество редове, включително и празни

HTTP методи:
- GET - зареждане на ресурс от сървъра
- HEAD - същото с разликата че отговорът няма да върне тяло, а само хедъри
- POST - изпраща данни за обработка от сървъра (create)
- PUT - актуализира даден ресурс (update)
- PATCH - актуализира частично даден ресурс (partial update)
- DELETE - трие даден ресурс

HTTP отговор: - начален ред - версия на HTTP, статус код, причина
              - хедъри
              - данни

HTTP статус кодове:
- група 100 - за "временни" кодове, не дават индикация, дали заявката е била успешна или не.
- група 200 - сървърът е обработил успешно клиентската заявка
- група 300 - ресурсът е наличен, но е разположен на друго място
- група 400 - клиентска грешка
- група 500 - сървърна грешка

General Headers - Могат да се ползват едновременно и в заявки, и в отговори. Съдържат информация (мета-данни) за самото съобщение или за метода на комуникация
Request Headers - специфични са само за заявките и могат да съдържат данни за самата заявка или за клиента
Response Headers - съдържат информация (мета-данни) за сървъра и формата на съобщението
Entity Headers - информация за самото съдържание на данни и/или за ресурса, заявен от клиента

User Agent е софтуер, който извършва действие от името на потребителя

       HTTP         vs          HTTPS
Insecure connection     Encrypted connection

от математиката 

REST е стил софтуерна архитектура за реализация на уеб услуги( не е спецификация или протокол)
- REST е клиент-сървър архитектура
- REST предоставя единен интерфейс (контракт)
- REST не пази състояние (stateless)
- REST предлага възможности за кеширане
- REST може да бъде многослойна система (optional)
- REST може да предостави code on demand (optional)

Separation of concerns - клиентът и сървърът имат различни задачи
Сървърът - съдържа бизнес логиката и се грижи за съхранението на данните













